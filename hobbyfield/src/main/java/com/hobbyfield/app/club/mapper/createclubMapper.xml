<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobbyfield.app.club.mapper.CreateclubMapper">

	<!-- 소모임 메인페이지 -->
	<select id="selectClubTop" resultType="CreateclubVO">
	
		select a.* from (
		select c.club_number
		, profile_nickname
		, club_name
		, FIND_CODE_NM(club_category) AS club_category
		, FIND_CODE_NM(club_type) AS club_type
		, club_info
		, FIND_CODE_NM(major_location) AS major_location
		, FIND_CODE_NM(sub_location) AS sub_location
		, club_public
		, singup_question1
		, singup_question2
		, singup_question3
		, club_img
		, club_img_path
		, club_total
		, nvl(cnt,0) cnt
		FROM club c left outer join(select club_number
		,count(*) cnt
		from club_apply
		group by club_number) a
		ON( c.club_number = a.club_number)
		ORDER BY nvl(cnt,0) desc
		) a 
		 <![CDATA[
		WHERE rownum <=4
		]]>
	</select>


	<!-- 소모임 전체조회 -->
	<select id="selectClubAllList" resultType="CreateclubVO">
	    SELECT 
	           club_number
	         , profile_nickname
	         , club_name
	         , club_category
	         , club_type
	         , club_info
	         , major_location
	         , sub_location
	         , club_public
	         , singup_question1
	         , singup_question2
	         , singup_question3
	         , club_img
	         , club_img_path
	         , club_total
	    FROM (
	        SELECT 
	               club_number
	             , profile_nickname
	             , club_name
	             , FIND_CODE_NM(club_category) AS club_category
	             , FIND_CODE_NM(club_type) AS club_type
	             , club_info
	             , FIND_CODE_NM(major_location) AS major_location
	             , FIND_CODE_NM(sub_location) AS sub_location
	             , club_public
	             , singup_question1
	             , singup_question2
	             , singup_question3
	             , club_img
	             , club_img_path
	             , club_total
	             , ROW_NUMBER() OVER(ORDER BY club_name DESC) AS RNUM
	        FROM club
	        ORDER BY club_name
	    	) <![CDATA[ WHERE RNUM BETWEEN #{start} AND #{end}]]>
	</select>
		

	<!-- 소모임 목록 무한 스크롤용 쿼리 -->
	<select id="selectClubsForInfiniteScroll"
		resultType="CreateclubVO">
		SELECT
	           club_number
	         , profile_nickname
	         , club_name
	         , FIND_CODE_NM(club_category) AS club_category
	         , FIND_CODE_NM(club_type) AS club_type
	         , club_info
	         , FIND_CODE_NM(major_location) AS major_location
	         , FIND_CODE_NM(sub_location) AS sub_location
	         , club_public
	         , singup_question1
	         , singup_question2
	         , singup_question3
	         , club_img
	         , club_img_path
	         , club_total
	    FROM (
	        SELECT
	               club_number
	             , profile_nickname
	             , club_name
	             , club_category
	             , club_type
	             , club_info
	             , major_location
	             , sub_location
	             , club_public
	             , singup_question1
	             , singup_question2
	             , singup_question3
	             , club_img
	             , club_img_path
	             , club_total
	             , ROWNUM as rnum
	        FROM club
	        ORDER BY profile_nickname
	    ) WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<!-- (모임장)내가만든 소모임 전체 조회 -->
	<select id="selectClubMyList" resultType="CreateclubVO">
		SELECT 
				c.club_number
			   , p.profile_nickname
			   , m.member_email
         	   , c.club_name
			   , FIND_CODE_NM(c.club_category) AS club_category
			   , FIND_CODE_NM(c.club_type) AS club_type
			   , c.club_info
			   , FIND_CODE_NM(c.major_location) AS major_location
			   , FIND_CODE_NM(c.sub_location) AS sub_location
			   , c.club_public
			   , c.singup_question1
			   , c.singup_question2
			   , c.singup_question3
			   , c.club_img
			   , c.club_img_path
			   , c.club_total
		FROM club c 
		JOIN profile p ON (c.profile_nickname = p.profile_nickname)
		JOIN member m ON (p.member_email = m.member_email)
		WHERE m.member_email = #{memberEmail}
		ORDER BY c.club_number
	</select>
	
	<!-- (모임장)내가만든 소모임 단건 조회 -->
	<select id="selectMadeClub" resultType="CreateclubVO">
		SELECT 
				club_number
			   , profile_nickname
         	   , club_name
			   , FIND_CODE_NM(club_category) AS club_category
			   , FIND_CODE_NM(club_type) AS club_type
			   , club_info
			   , FIND_CODE_NM(major_location) AS major_location
			   , FIND_CODE_NM(sub_location) AS sub_location
			   , club_public
			   , singup_question1
			   , singup_question2
			   , singup_question3
			   , club_img
			   , club_img_path
			   , club_total
		FROM club
		WHERE profile_nickname = #{profileNickname}
	</select>
	
	
	<!-- 소모임 세부조회 -->
	<select id="getClubInfo" resultType="CreateclubVO">
		SELECT 
				c.club_number
			   , c.profile_nickname
         	   , c.club_name
			   , FIND_CODE_NM(club_category) AS club_category
			   , FIND_CODE_NM(club_type) AS club_type
			   , club_info
			   , FIND_CODE_NM(major_location) AS major_location
			   , FIND_CODE_NM(sub_location) AS sub_location
			   , club_public
			   , singup_question1
			   , singup_question2
			   , singup_question3
			   , club_img
			   , club_img_path
			   , club_total
               , p.profile_img
               , p.profile_img_path
		FROM club c JOIN profile p ON(c.profile_nickname = p.profile_nickname)
		WHERE club_number = #{clubNumber}
	</select>
	
	<!-- 소모임 등록 -->
<!-- 	현재 insert All을 사용해야하고 createclubVO에 해당 club_member가 없어서 문제가 생김 -->
		
	<insert id="insertClub" parameterType="CreateclubVO">
		<selectKey keyProperty="clubNumber" resultType="int" order="BEFORE">
			SELECT NVL(MAX(club_number), 0) + 1
			FROM club
		</selectKey>
		INSERT ALL 
		INTO club
				(	
					club_number
					, profile_nickname
					, club_name
					, club_category
					, club_type
					, club_info
					, major_location
					, sub_location
					, club_public
					, singup_question1
					, singup_question2
					, singup_question3
					, club_img
					, club_img_path
					, club_total
				)
		VALUES
				(
					#{clubNumber}
					, #{profileNickname}
					, #{clubName}
					, #{clubCategory}
					, #{clubType}
					, #{clubInfo}
					, #{majorLocation}
					, #{subLocation}
					, #{clubPublic}
					, #{singupQuestion1}
					, #{singupQuestion2}
					, #{singupQuestion3}
					, #{clubImg}
					, #{clubImgPath}
					, 50
				) 
	INTO club_member
				(
					club_member_number
					,profile_nickname
					,club_number
					,club_join_date
				)
				VALUES	
				(
					(SELECT NVL(MAX(CLUB_MEMBER_NUMBER), 0) + 1 FROM CLUB_member)
					,#{profileNickname}
					,#{clubNumber}
					,SYSDATE
				)
	SELECT * FROM DUAL
	</insert>
	
 	<!-- 닉네임 중복체크 --> 
<!-- 	<select id="nickChk" resultType="int"> -->
<!-- 		SELECT count(*)  -->
<!-- 		FROM club -->
<!-- 		WHERE profile_nickname = #{profileNickname} -->
<!-- 	</select> -->
	
	<!-- 소모임 이름 중복체크 -->
	<select id="clubnameChk" resultType="int">
		SELECT count(*) 
		FROM club
		WHERE club_name = #{clubName}
	</select>
	
	
	<!-- 소모임 수정 전체수정 필요함-->
	<update id="updateClub" parameterType="CreateclubVO">
		UPDATE club
		<set>
			, profile_nickname = #{profileNickname}
			, club_name = #{clubName}
			, club_category = #{clubCategory}
			, club_type = #{clubType}
			, club_info = #{clubInfo}
			, major_location = #{majorLocation}
			, sub_location = #{subLocation}
			, club_public = #{clubPublic}
			, singup_question1 = #{singupQuestion1}
			, singup_question2 = #{singupQuestion2}
			, singup_question3 = #{singupQuestion3}
			, club_img = #{clubImg}
			, club_img_path =#{clubImgPath}
		</set>
		WHERE club_number = #{clubNumber}
	</update>
	
	
	<!-- 소모임 삭제? -->
	
	
	<!-- 소모임 종류 정렬 -->
	<select id="getOrderCategory" resultType="CreateclubVO">
		select club_number
				, profile_nickname
				, club_name
				, FIND_CODE_NM(club_category) AS club_category
				, FIND_CODE_NM(club_type) AS club_type
				, club_info
				, FIND_CODE_NM(major_location) AS major_location
				, FIND_CODE_NM(sub_location) AS sub_location
				, club_public
				, singup_question1
				, singup_question2
				, singup_question3
				, club_img
				, club_img_path
				, club_total
		FROM club
		WHERE FIND_CODE_NM(club_category) = '${club_category}'
		ORDER BY FIND_CODE_NM(club_category) DESC
	</select>

	<!-- 소모임 지역 정렬 -->
	<select id="getOrderLocation" resultType="CreateclubVO">
		select club_number
				, profile_nickname
				, club_name
				, FIND_CODE_NM(club_category) AS club_category
				, FIND_CODE_NM(club_type) AS club_type
				, club_info
				, FIND_CODE_NM(major_location) AS major_location
				, FIND_CODE_NM(sub_location) AS sub_location
				, club_public
				, singup_question1
				, singup_question2
				, singup_question3
				, club_img
				, club_img_path
				, club_total
		FROM club
		WHERE FIND_CODE_NM(major_location) = '${majorLocation}'
		ORDER BY  FIND_CODE_NM(major_location) DESC
	</select>

</mapper>